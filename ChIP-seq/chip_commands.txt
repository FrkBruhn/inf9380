#Analysis of ChIP-seq data from 
#Sulfolobus acidocaldarius DSM 639


#1 Get Ready

module load bowtie
cp -r /work/projects/norbis/workflows/chip/data .
cp -r /work/projects/norbis/workflows/chip/programs .

chmod a+rx programs/*

#2 Alignment


#Indexing

bowtie-build -f data/saci.fasta data/saci

#Alignment
bowtie -p 7 -S -v 2 -m 1 data/saci data/N1_CHIP.fastq > N1_CHIP.sam  
bowtie -p 7 -S -v 2 -m 1 data/saci data/N1_INPUT.fastq > N1_INPUT.sam  
bowtie -p 7 -S -v 2 -m 1 data/saci data/T1_CHIP.fastq > T1_CHIP.sam  
bowtie -p 7 -S -v 2 -m 1 data/saci data/T1_INPUT.fastq > T1_INPUT.sam  




#3 Making bigwig files:

#Loading samtools and bedtools

module load samtools
module load bedtools

#Getting BAM file from SAM file:

samtools view N1_CHIP.sam -bS > N1_CHIP.bam                                                                                               
samtools view T1_CHIP.sam -bS > T1_CHIP.bam                                                                                              
samtools view N1_INPUT.sam -bS > N1_INPUT.bam                                                                                          
samtools view T1_INPUT.sam -bS > T1_INPUT.bam            
                                     



#Sorting the BAM file with samtools:

samtools sort N1_INPUT.bam N1_INPUT_sorted                                                                                                            
samtools sort T1_INPUT.bam T1_INPUT_sorted                                                                                                                  
samtools sort T1_CHIP.bam T1_CHIP_sorted                                                                                                                 
samtools sort N1_CHIP.bam N1_CHIP_sorted


#Getting bedGraph files with genomeCoverageBed:

genomeCoverageBed -ibam N1_CHIP_sorted.bam -bg -g data/sacisizes.txt > N1_CHIP.bedGraph 
genomeCoverageBed -ibam T1_CHIP_sorted.bam -bg -g data/sacisizes.txt > T1_CHIP.bedGraph 
genomeCoverageBed -ibam T1_INPUT_sorted.bam -bg -g data/sacisizes.txt > T1_INPUT.bedGraph 
genomeCoverageBed -ibam N1_INPUT_sorted.bam -bg -g data/sacisizes.txt > N1_INPUT.bedGraph                          


#Sorting bedGraph files based on column 1, then column 2:

sort -k1,1 -k2,2n N1_INPUT.bedGraph > N1_INPUT_sorted.bedGraph                                                                     	
sort -k1,1 -k2,2n T1_INPUT.bedGraph > T1_INPUT_sorted.bedGraph                                                                        	
sort -k1,1 -k2,2n T1_CHIP.bedGraph > T1_CHIP_sorted.bedGraph                                                                             	
sort -k1,1 -k2,2n N1_CHIP.bedGraph > N1_CHIP_sorted.bedGraph


#Making bigWig files from bedGraph:
programs/bedGraphToBigWig -unc N1_INPUT_sorted.bedGraph sacisizes.txt N1_INPUT_bigWig.bwig 	
programs/bedGraphToBigWig -unc T1_INPUT_sorted.bedGraph sacisizes.txt T1_INPUT_bigWig.bwig 	
programs/bedGraphToBigWig -unc T1_CHIP_sorted.bedGraph sacisizes.txt T1_CHIP_bigWig.bwig    	
programs/bedGraphToBigWig -unc N1_CHIP_sorted.bedGraph sacisizes.txt N1_CHIP_bigWig.bwig


#4 Peak calling:
module load macs

macs -t N1_CHIP.sam -c N1_INPUT.sam  -n N1 -g 2.23e6 -f SAM                                                                              
macs -t T1_CHIP.sam -c T1_INPUT.sam  -n T1 -g 2.23e6 -f SAM



#Getting one file with all the peaks and sorting it:
cat N1_peaks.bed T1_peaks.bed > N1_T1_peaks.bed                                                                                                                            
sort -k1,1 -k2,2n N1_T1_peaks.bed > N1_T1_sorted_peaks.bed

#Running bedtools merge for peaks found in N1 and T1 to have the complete set for comparison:
									
bedtools merge -i N1_T1_sorted_peaks.bed > N1_T1_merged_peaks.bed                                                                                                                                

#Running intersectBed to find all reads that intersect with the peaks:
intersectBed -bed -wb -abam N1_CHIP_sorted.bam -b N1_T1_merged_peaks.bed > N1_CHIP_intersect.txt                                                                                                                                                      
intersectBed -bed -wb -abam T1_CHIP_sorted.bam -b N1_T1_merged_peaks.bed > T1_CHIP_intersect.txt                                                                                                                                                              
intersectBed -bed -wb -abam N1_INPUT_sorted.bam -b N1_T1_merged_peaks.bed > N1_INPUT_intersect.txt                                                                                                                                                         
intersectBed -bed -wb -abam T1_INPUT_sorted.bam -b N1_T1_merged_peaks.bed > T1_INPUT_intersect.txt

#Using cut to get out the columns for chr, start and end for the peaks. Sorting and counting them to find the number of reads that overlap them:
cut -f13,14,15 N1_CHIP_intersect.txt | sort|uniq -c > N1_CHIP_ib_count.txt                                                               
cut -f13,14,15 T1_CHIP_intersect.txt | sort|uniq -c > T1_CHIP_ib_count.txt                                                                            
cut -f13,14,15 T1_INPUT_intersect.txt | sort|uniq -c > T1_INPUT_ib_count.txt                                                          
cut -f13,14,15 N1_INPUT_intersect.txt | sort|uniq -c > N1_INPUT_ib_count.txt

#Using awk to make a format R reads properly, with no spaces between chr, start and end:
awk '{print $2"_"$3"_"$4"\t"$1}' N1_CHIP_ib_count.txt > N1_CHIP_countR.txt                                                 		
awk '{print $2"_"$3"_"$4"\t"$1}' T1_CHIP_ib_count.txt > T1_CHIP_countR.txt                                                      	
awk '{print $2"_"$3"_"$4"\t"$1}' T1_INPUT_ib_count.txt > T1_INPUT_countR.txt                                            		
awk '{print $2"_"$3"_"$4"\t"$1}' N1_INPUT_ib_count.txt > N1_INPUT_countR.txt



