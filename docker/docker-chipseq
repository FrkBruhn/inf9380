1 Be prepared
--------------
Copy "/work/projects/norbis/workflows/chip/data" to the working directory

2 Alignment
-------------
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ genomicpariscentre/bowtie1 bowtie-build -f /dir/data/saci.fasta /dir/data/saci

docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ genomicpariscentre/bowtie1 bowtie -p 7 -S -v 2 -m 1 /dir/data/saci /dir/data/N1_CHIP.fastq /dir/N1_CHIP.sam
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ genomicpariscentre/bowtie1 bowtie -p 7 -S -v 2 -m 1 /dir/data/saci /dir/data/N1_INPUT.fastq /dir/N1_INPUT.sam
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ genomicpariscentre/bowtie1 bowtie -p 7 -S -v 2 -m 1 /dir/data/saci /dir/data/T1_CHIP.fastq /dir/T1_CHIP.sam
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ genomicpariscentre/bowtie1 bowtie -p 7 -S -v 2 -m 1 /dir/data/saci /dir/data/T1_INPUT.fastq /dir/T1_INPUT.sam

3 Making bigwig files:
-----------------------
* Getting BAM file from SAM file:
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ genomicpariscentre/samtools samtools view /dir/N1_CHIP.sam -bS -o /dir/N1_CHIP.bam
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ genomicpariscentre/samtools samtools view /dir/N1_INPUT.sam -bS -o /dir/N1_INPUT.bam
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ genomicpariscentre/samtools samtools view /dir/T1_CHIP.sam -bS -o /dir/T1_CHIP.bam
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ genomicpariscentre/samtools samtools view /dir/T1_INPUT.sam -bS -o /dir/T1_INPUT.bam

* Sorting the BAM file with samtools:
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ genomicpariscentre/samtools samtools sort /dir/N1_CHIP.bam /dir/N1_CHIP_sorted
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ genomicpariscentre/samtools samtools sort /dir/N1_INPUT.bam /dir/N1_INPUT_sorted
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ genomicpariscentre/samtools samtools sort /dir/T1_CHIP.bam /dir/T1_CHIP_sorted
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ genomicpariscentre/samtools samtools sort /dir/T1_INPUT.bam /dir/T1_INPUT_sorted

* Getting bedGraph files with genomeCoverageBed:
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ genomicpariscentre/bedtools bash -c "genomeCoverageBed -ibam /dir/N1_CHIP_sorted.bam -bg -g /dir/data/sacisizes.txt > /dir/N1_CHIP.bedGraph"
ocker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ genomicpariscentre/bedtools bash -c "genomeCoverageBed -ibam /dir/T1_CHIP_sorted.bam -bg -g /dir/data/sacisizes.txt > /dir/T1_CHIP.bedGraph"
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ genomicpariscentre/bedtools bash -c "genomeCoverageBed -ibam /dir/T1_INPUT_sorted.bam -bg -g /dir/data/sacisizes.txt > /dir/T1_INPUT.bedGraph"
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ genomicpariscentre/bedtools bash -c "genomeCoverageBed -ibam /dir/N1_INPUT_sorted.bam -bg -g /dir/data/sacisizes.txt > /dir/N1_INPUT.bedGraph"

* Sorting bedGraph files based on column 1, then column 2:
sort -k1,1 -k2,2n N1_INPUT.bedGraph > N1_INPUT_sorted.bedGraph
sort -k1,1 -k2,2n T1_INPUT.bedGraph > T1_INPUT_sorted.bedGraph
sort -k1,1 -k2,2n T1_CHIP.bedGraph > T1_CHIP_sorted.bedGraph
sort -k1,1 -k2,2n N1_CHIP.bedGraph > N1_CHIP_sorted.bedGraph

* Making bigWig files from bedGraph:
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ dukegcb/bedgraphtobigwig bedGraphToBigWig -unc /dir/N1_INPUT_sorted.bedGraph /dir/data/sacisizes.txt /dir/N1_INPUT_bigWig.bwig
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ dukegcb/bedgraphtobigwig bedGraphToBigWig -unc /dir/T1_INPUT_sorted.bedGraph /dir/data/sacisizes.txt /dir/T1_INPUT_bigWig.bwig
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ dukegcb/bedgraphtobigwig bedGraphToBigWig -unc /dir/N1_CHIP_sorted.bedGraph /dir/data/sacisizes.txt /dir/N1_CHIP_bigWig.bwig
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ dukegcb/bedgraphtobigwig bedGraphToBigWig -unc /dir/T1_CHIP_sorted.bedGraph /dir/data/sacisizes.txt /dir/T1_CHIP_bigWig.bwig

4 Peak calling:
----------------
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ -w /dir/ genomicpariscentre/macs macs14 -t N1_CHIP.sam -c N1_INPUT.sam -n N1 -g 2.23e6 -f SAM
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ -w /dir/ genomicpariscentre/macs macs14 -t T1_CHIP.sam -c T1_INPUT.sam -n T1 -g 2.23e6 -f SAM

* Getting one file with all the peaks and sorting it:
cat N1_peaks.bed T1_peaks.bed > N1_T1_peaks.bed
sort -k1,1 -k2,2n N1_T1_peaks.bed > N1_T1_sorted_peaks.bed

* Running bedtools merge for peaks found in N1 and T1 to have the complete set for comparison:
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ -w /dir/ genomicpariscentre/bedtools bash -c "bedtools merge -i N1_T1_sorted_peaks.bed > N1_T1_merged_peaks.bed"

* Running intersectBed to find all reads that intersect with the peaks:
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ -w /dir/ genomicpariscentre/bedtools bash -c "intersectBed -bed -wb -abam N1_CHIP_sorted.bam -b N1_T1_merged_peaks.bed > N1_CHIP_intersect.txt"
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ -w /dir/ genomicpariscentre/bedtools bash -c "intersectBed -bed -wb -abam N1_INPUT_sorted.bam -b N1_T1_merged_peaks.bed > N1_INPUT_intersect.txt"
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ -w /dir/ genomicpariscentre/bedtools bash -c "intersectBed -bed -wb -abam T1_CHIP_sorted.bam -b N1_T1_merged_peaks.bed > T1_CHIP_intersect.txt"
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ -w /dir/ genomicpariscentre/bedtools bash -c "intersectBed -bed -wb -abam T1_INPUT_sorted.bam -b N1_T1_merged_peaks.bed > T1_INPUT_intersect.txt"

* Using cut to get out the columns for chr, start and end for the peaks. Sorting and counting them to find the number of reads that overlap them:
cut -f13,14,15 N1_CHIP_intersect.txt | sort|uniq -c > N1_CHIP_ib_count.txt
cut -f13,14,15 T1_CHIP_intersect.txt | sort|uniq -c > T1_CHIP_ib_count.txt
cut -f13,14,15 T1_INPUT_intersect.txt | sort|uniq -c > T1_INPUT_ib_count.txt
cut -f13,14,15 N1_INPUT_intersect.txt | sort|uniq -c > N1_INPUT_ib_count.txt

* Using awk to make a format R reads properly, with no spaces between chr, start and end:
awk '{print $2"_"$3"_"$4"\t"$1}' N1_CHIP_ib_count.txt > N1_CHIP_countR.txt
awk '{print $2"_"$3"_"$4"\t"$1}' T1_CHIP_ib_count.txt > T1_CHIP_countR.txt
awk '{print $2"_"$3"_"$4"\t"$1}' T1_INPUT_ib_count.txt > T1_INPUT_countR.txt
awk '{print $2"_"$3"_"$4"\t"$1}' N1_INPUT_ib_count.txt > N1_INPUT_countR.txt

* Normalization, comparing N1 and T1 and making plots in R:
docker run --rm -v /Users/azabadm/Documents/NORBIS/docker-chipseq/:/dir/ -w /dir/ azab/chipseq Rscript chip_Rcommands.R
